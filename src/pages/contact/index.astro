---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Main from "@layouts/Main.astro";
import { SITE } from "@config";
// TODO: do something with the form
---

<Layout title={`Contact | ${SITE.title}`}>
  <Header activeNav="contact" />
  <Main pageTitle="Contact" pageDesc="Contact me">
    <div class="mx-auto max-w-2xl px-4">
      <form id="contactForm" class="space-y-6">
        <div class="space-y-2">
          <label for="name" class="block text-sm font-medium text-skin-base"
            >Name</label
          >
          <input
            type="text"
            id="name"
            name="name"
            required
            minlength="2"
            class="placeholder-skin-base/50 focus:ring-skin-accent block w-full rounded-md border border-skin-line bg-skin-fill px-3 py-2 text-skin-base focus:border-skin-accent focus:outline-none focus:ring-1"
            placeholder="Your name"
          />
          <p id="nameError" class="hidden text-sm text-red-500"></p>
        </div>

        <div class="space-y-2">
          <label for="email" class="block text-sm font-medium text-skin-base"
            >Email</label
          >
          <input
            type="email"
            id="email"
            name="email"
            required
            class="placeholder-skin-base/50 focus:ring-skin-accent block w-full rounded-md border border-skin-line bg-skin-fill px-3 py-2 text-skin-base focus:border-skin-accent focus:outline-none focus:ring-1"
            placeholder="your.email@example.com"
          />
          <p id="emailError" class="hidden text-sm text-red-500"></p>
        </div>

        <div class="space-y-2">
          <label for="message" class="block text-sm font-medium text-skin-base"
            >Message</label
          >
          <textarea
            id="message"
            name="message"
            rows="6"
            required
            minlength="10"
            class="placeholder-skin-base/50 focus:ring-skin-accent block w-full rounded-md border border-skin-line bg-skin-fill px-3 py-2 text-skin-base focus:border-skin-accent focus:outline-none focus:ring-1"
            placeholder="Your message"></textarea>
          <p id="messageError" class="hidden text-sm text-red-500"></p>
        </div>

        <button
          type="submit"
          class="focus:ring-skin-accent inline-flex w-full justify-center rounded-md border border-transparent bg-skin-accent px-4 py-2 text-sm font-medium text-skin-inverted shadow-sm hover:bg-skin-accent/90 focus:outline-none focus:ring-2 focus:ring-offset-2"
        >
          Send Message
        </button>
      </form>
    </div>
  </Main>
  <Footer />
</Layout>

<script>
  const form = document.getElementById("contactForm") as HTMLFormElement;
  const nameInput = document.getElementById("name") as HTMLInputElement;
  const emailInput = document.getElementById("email") as HTMLInputElement;
  const messageInput = document.getElementById(
    "message"
  ) as HTMLTextAreaElement;
  const nameError = document.getElementById(
    "nameError"
  ) as HTMLParagraphElement;
  const emailError = document.getElementById(
    "emailError"
  ) as HTMLParagraphElement;
  const messageError = document.getElementById(
    "messageError"
  ) as HTMLParagraphElement;

  // Helper function to show error
  function showError(
    input: HTMLElement,
    errorElement: HTMLElement,
    message: string
  ) {
    input.classList.add("border-red-500");
    errorElement.textContent = message;
    errorElement.classList.remove("hidden");
  }

  // Helper function to clear error
  function clearError(input: HTMLElement, errorElement: HTMLElement) {
    input.classList.remove("border-red-500");
    errorElement.textContent = "";
    errorElement.classList.add("hidden");
  }

  // Validate name
  function validateName() {
    const name = nameInput.value.trim();
    if (name.length < 2) {
      showError(
        nameInput,
        nameError,
        "Name must be at least 2 characters long"
      );
      return false;
    }

    if (name.length > 20) {
      showError(
        nameInput,
        nameError,
        "Name must be less than 20 characters long"
      );
      return false;
    }

    clearError(nameInput, nameError);
    return true;
  }

  // Validate email
  function validateEmail() {
    const email = emailInput.value.trim();
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      showError(emailInput, emailError, "Please enter a valid email address");
      return false;
    }
    clearError(emailInput, emailError);
    return true;
  }

  // Validate message
  function validateMessage() {
    const message = messageInput.value.trim();
    if (message.length < 10) {
      showError(
        messageInput,
        messageError,
        "Message must be at least 10 characters long"
      );
      return false;
    }
    clearError(messageInput, messageError);
    return true;
  }

  // Add event listeners for real-time validation
  nameInput.addEventListener("input", validateName);
  emailInput.addEventListener("input", validateEmail);
  messageInput.addEventListener("input", validateMessage);

  // Form submission handler
  form.addEventListener("submit", e => {
    e.preventDefault();

    const isNameValid = validateName();
    const isEmailValid = validateEmail();
    const isMessageValid = validateMessage();

    if (isNameValid && isEmailValid && isMessageValid) {
      // TODO: Add form submission logic here
      console.log("Form is valid, ready to submit");
      // You can add your form submission logic here
      // For example, using fetch to send the data to your backend
    }
  });
</script>
